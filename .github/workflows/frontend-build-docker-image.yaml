name: Frontend - Docker Image
on:
  workflow_dispatch:
  push:
    paths:
    - 'frontend/**'
  pull_request:
    branches: [main]
    paths:
    - 'frontend/**'
env:
  IMAGE_NAME: food-app-frontend
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
      working-directory: frontend
    - run: npm test
      working-directory: frontend
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Docker Setup Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1.1.0
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    - name: Run Buildx
      run: "IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME\n # Change all uppercase
        to lowercase\nIMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')\n# Strip git
        ref prefix from version\nVERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n#
        Strip \"v\" prefix from tag name\n[[ \"${{ github.ref }}\" == \"refs/tags/\"*
        ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n# Use Docker `latest` tag
        convention\n[ \"$VERSION\" == \"main\" ] && VERSION=latest\necho IMAGE_ID=$IMAGE_ID\necho
        VERSION=$VERSION\n# --platform linux/amd64 \ndocker buildx build --platform
        linux/arm/v7 --output \"type=image,push=true\" --file Dockerfile --tag $IMAGE_ID:$VERSION
        .\n"
      working-directory: frontend
